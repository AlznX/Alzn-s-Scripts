-- Gui to Lua
-- Version: 3.2

-- Instances:

local HealthBarGui = Instance.new("ScreenGui")
local Tray = Instance.new("Frame")
local HealthBar = Instance.new("ImageLabel")
local Fill = Instance.new("ImageLabel")
local Padding = Instance.new("UIPadding")

--Properties:

HealthBarGui.Name = "HealthBarGui"
HealthBarGui.Parent = game.CoreGui

Tray.Name = "Tray"
Tray.Parent = HealthBarGui
Tray.AnchorPoint = Vector2.new(0.5, 1)
Tray.BackgroundTransparency = 1.000
Tray.Position = UDim2.new(0.5, 0, 1, -18)
Tray.Size = UDim2.new(0, 170, 0, 18)

HealthBar.Name = "HealthBar"
HealthBar.Parent = Tray
HealthBar.AnchorPoint = Vector2.new(0, 0.5)
HealthBar.BackgroundTransparency = 1.000
HealthBar.LayoutOrder = 1
HealthBar.Position = UDim2.new(0, 0, 0.5, 0)
HealthBar.Size = UDim2.new(1, 0, 1, 0)
HealthBar.Image = "rbxasset://textures/ui/TopBar/HealthBarBase.png"
HealthBar.ScaleType = Enum.ScaleType.Slice
HealthBar.SliceCenter = Rect.new(4, 3, 4, 3)

Fill.Name = "Fill"
Fill.Parent = HealthBar
Fill.BackgroundTransparency = 1.000
Fill.Size = UDim2.new(1, 0, 1, 0)
Fill.Image = "rbxasset://textures/ui/TopBar/HealthBar.png"
Fill.ImageColor3 = Color3.fromRGB(27, 252, 107)
Fill.ScaleType = Enum.ScaleType.Slice
Fill.SliceCenter = Rect.new(4, 3, 4, 3)

Padding.Name = "Padding"
Padding.Parent = Tray
Padding.PaddingTop = UDim.new(0, 4)

-- Scripts:

local function EMBT_fake_script() -- HealthBarGui.LocalScript 
	local script = Instance.new('LocalScript', HealthBarGui)

	game.StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Health,false)
	local player = game.Players.LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()
	
	local humanoid = character:WaitForChild("Humanoid")
	
	local function color3ToVector3(color3)
		return Vector3.new(color3.r, color3.g, color3.b)
	end
	
	local HealthPercentForOverlay = 5 / 100
	local HealthRedColor = Color3.fromRGB(255, 28, 0)
	local HealthYellowColor = Color3.fromRGB(250, 235, 0)
	local HealthGreenColor = Color3.fromRGB(27, 252, 107)
	local HealthOverhealColor = Color3.fromRGB(26, 158, 252)
	
	
	local healthColorToPosition = {
		[color3ToVector3(HealthRedColor)] = 0.1,
		[color3ToVector3(HealthYellowColor)] = 0.5,
		[color3ToVector3(HealthGreenColor)] = 0.8,
	}
	local redHealthFraction = 0.1
	local redHealthColor = HealthRedColor
	local greenHealthFraction = 0.8
	local greenHealthColor = HealthGreenColor
	
	local tweens = game:GetService("TweenService")
	
	local function getHealthBarColor(healthPercent)
		if healthPercent <= redHealthFraction then
			return redHealthColor
		elseif healthPercent >= greenHealthFraction then
			return greenHealthColor
		end
	
		-- Shepard's Interpolation
		local numeratorSum = Vector3.new(0,0,0)
		local denominatorSum = 0
		for colorSampleValue, samplePoint in pairs(healthColorToPosition) do
			local distance = healthPercent - samplePoint
			if distance == 0 then
				-- If we are exactly on an existing sample value then we don't need to interpolate
				return Color3.new(colorSampleValue.x, colorSampleValue.y, colorSampleValue.z)
			else
				local wi = 1 / (distance*distance)
				numeratorSum = numeratorSum + wi * colorSampleValue
				denominatorSum = denominatorSum + wi
			end
		end
		local result = numeratorSum / denominatorSum
		return Color3.new(result.x, result.y, result.z)
	end
	
	local LastHealth = humanoid.Health
	
	humanoid:GetPropertyChangedSignal("Health"):Connect(function(health)
		local base = script.Parent.Tray:WaitForChild("HealthBar")
		local healthPercent = humanoid.Health / humanoid.MaxHealth
		if humanoid.Health <= humanoid.MaxHealth then
			tweens:Create(base.Fill, TweenInfo.new(math.abs(LastHealth-humanoid.Health)/humanoid.MaxHealth, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(healthPercent, 0, 1, 0), ImageColor3 = getHealthBarColor(healthPercent)}):Play()
		else
			tweens:Create(base.Fill, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(1, 0, 1, 0), ImageColor3 = HealthOverhealColor}):Play()
		end
		LastHealth = humanoid.Health
	end)
end
coroutine.wrap(EMBT_fake_script)()
