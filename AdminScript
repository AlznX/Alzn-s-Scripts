local prefix = ";"
local isAdmin = {[game.Players.LocalPlayer.Name] = true, ["FRIEND1"] = true, ["FRIEND2"] = true}
local lplr = game.Players.LocalPlayer.Name
local au = false
local Owner = game.Players.LocalPlayer

game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "Sword Simulator Admin Script",
    Text = "Enjoy the script while it's available!"
})

-- Helper function to get players by partial name match
local function GetPlayer(name)
    local players = {}
    for _, player in ipairs(game.Players:GetPlayers()) do
        if player.Name:lower():sub(1, #name) == name:lower() or player.DisplayName:lower():sub(1, #name) == name:lower() then
            table.insert(players, player)
        end
    end
    return players
end

-- Kill function
local function Kill(targets)
    local sword = game.Players.LocalPlayer.Backpack:FindFirstChild("sword")
    if not sword then
        warn("[Error] Sword not found.")
        return
    end

    local damageRemoteEvent = sword:FindFirstChild("Handle")
        and sword.Handle:FindFirstChild("dmg")
        and sword.Handle.dmg:FindFirstChild("RemoteEvent")
    
    if not damageRemoteEvent then
        warn("[Error] Damage RemoteEvent not found.")
        return
    end

    for _, target in ipairs(targets) do
        if target and target.Character and target.Character:FindFirstChild("Humanoid") then
            pcall(function()
                damageRemoteEvent:FireServer(target.Character.Humanoid, math.huge)
            end)
        end
    end
end

-- Continuously track and kill players
local function TrackAndKill(targets)
    while #targets > 0 do
        for i = #targets, 1, -1 do
            local target = targets[i]
            if target.Character and target.Character:FindFirstChild("Humanoid") and target.Character.Humanoid.Health > 0 then
                Kill({target})
            else
                table.remove(targets, i)
            end
        end
        task.wait(0)
    end
end

-- Auto-Farm
local function AF()
    au = true
    local Player = game.Players.LocalPlayer
    local sword = Player.Backpack:FindFirstChild("sword")

    if not sword then
        game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("[System] No sword found for auto-farming.", "All")
        au = false
        return
    end

    while au do
        local upEvent = sword:FindFirstChild("Handle")
            and sword.Handle:FindFirstChild("up")
            and sword.Handle.up:FindFirstChild("RemoteEvent")
        
        if upEvent then
            pcall(function()
                upEvent:FireServer()
            end)
        end
        task.wait(0)
    end
end

-- Chat command handler
local function onChatted(message, player)
    if not message:sub(1, #prefix) == prefix then return end
    local msg = message:sub(#prefix + 1)

    if msg == "cmds" and player == Owner then
        local cmds = "[System] Commands: kill(me/plr/others/all), admin(all/plr), unadmin(all/plr), af, saf, cmds"
        game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(cmds, "All")
    elseif msg:sub(1, 5) == "kill " and isAdmin[player.Name] then
        local target = msg:sub(6)
        if target == "all" then
            TrackAndKill(game.Players:GetPlayers())
        elseif target == "me" then
            Kill({player})
        elseif target == "others" then
            local others = {}
            for _, p in ipairs(game.Players:GetPlayers()) do
                if p.Name ~= player.Name then table.insert(others, p) end
            end
            TrackAndKill(others)
        else
            Kill(GetPlayer(target))
        end
    elseif msg:sub(1, 6) == "admin " and isAdmin[player.Name] then
        local target = msg:sub(7)
        if target == "all" then
            for _, p in ipairs(game.Players:GetPlayers()) do
                if p.Name ~= Owner.Name then isAdmin[p.Name] = true end
            end
            game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("[System] Everyone is now Admin.", "All")
        else
            for _, p in ipairs(GetPlayer(target)) do
                if p.Name ~= Owner.Name then
                    isAdmin[p.Name] = true
                    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("[System] "..p.Name.." is now Admin.", "All")
                end
            end
        end
    elseif msg:sub(1, 8) == "unadmin " and isAdmin[player.Name] then
        local target = msg:sub(9)
        if target == "all" then
            for _, p in ipairs(game.Players:GetPlayers()) do
                if p.Name ~= Owner.Name then isAdmin[p.Name] = false end
            end
            game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("[System] Admin rights removed from all.", "All")
        else
            for _, p in ipairs(GetPlayer(target)) do
                if p.Name ~= Owner.Name then
                    isAdmin[p.Name] = false
                    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("[System] "..p.Name.." is no longer Admin.", "All")
                end
            end
        end
    elseif msg == "af" and player == Owner then
        AF()
    elseif msg == "saf" and player == Owner then
        au = false
    end
end

-- Connect events
game.Players.PlayerAdded:Connect(function(player)
    player.Chatted:Connect(function(message) onChatted(message, player) end)
end)

for _, player in ipairs(game.Players:GetPlayers()) do
    player.Chatted:Connect(function(message) onChatted(message, player) end)
end
